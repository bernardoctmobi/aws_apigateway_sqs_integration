openapi: 3.0.1
info:
  title: Send Message API
  version: 1.0.0

x-amazon-apigateway-request-validators:
  RequestModelPayload:
    validateRequestParameters: true
    validateRequestBody: true

paths:
  /send:
    post:
      responses:
        200:
          description: MESSAGE SENT
        400:
          description: BAD REQUEST
        500:
          description: INTERNAL ERROR
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sendMsgSchema"
      x-amazon-apigateway-request-validator: "RequestModelPayload"
      x-amazon-apigateway-integration:
        type: aws
        uri:
          Fn::Sub:
            - "arn:aws:apigateway:${AWS::Region}:sqs:path/${AWS::AccountId}/${Queue}"
            - Queue: { "Fn::GetAtt": [MessageQueue, QueueName] }
        credentials: { "Fn::GetAtt": [SendMessageApiRole, Arn] }
        httpMethod: POST
        passthroughBehavior: NEVER
        responses:
          default:
            statusCode: 200
        requestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        requestTemplates:
          application/json: Action=SendMessage&MessageBody=$util.escapeJavaScript($input.body).replaceAll('\\n', '').replaceAll('\\r', '').replaceAll('\\"', '"')

components:
  schemas:
    sendMsgSchema:
      type: object
      required:
        - firstNumber
        - secondNumber
      properties:
        firstNumber:
          type: number
        secondNumber:
          type: number
      additionalProperties: false
